version: 2.1

jobs:
  test:
    docker:
      - image: cimg/base:2021.04
    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.6
      - run:
          name: Build Images
          command: |
            echo 'export APPLICATION_IMAGE_TAG=laravel:base' >> $BASH_ENV
            echo 'export WEBSERVER_IMAGE_TAG=webserver:base' >> $BASH_ENV

            source $BASH_ENV

            DOCKER_BUILDKIT=1 docker build -t "${APPLICATION_IMAGE_TAG}" --ssh default --progress plain --file .docker/php-fpm/Dockerfile .
            DOCKER_BUILDKIT=1 docker build -t laravel:test --ssh default --progress plain --build-arg "BASE_IMAGE=${APPLICATION_IMAGE_TAG}" .circleci/
            docker cp $(docker create --rm ${APPLICATION_IMAGE_TAG}):/var/www/public/. ./public/
            docker build -t "${WEBSERVER_IMAGE_TAG}" --build-arg NGINX_CONFIG_TEMPLATE=.docker/nginx/laravel.conf.template.cloud --file .docker/nginx/Dockerfile .
      - run:
          name: Run Tests
          command: |
            mkdir -p artifacts/screenshots
            mkdir -p artifacts/logs

            docker-compose -f .circleci/docker-compose.ci.yml run --rm --entrypoint bash -e CACHE_DRIVER=array laravel_test -c "
              set -e
              cp .env.example .env
              php artisan key:generate --force
              curl \${DB_HOST}:\${DB_PORT} --http0.9 --retry-connrefused --retry 30 --output /dev/null --silent
              php artisan migrate --force
              ./vendor/bin/phpunit
            "

            if grep -q '"laravel/dusk"' 'composer.json'; then
              LARAVEL_IMAGE=${APPLICATION_IMAGE_TAG} WEBSERVER_IMAGE=${WEBSERVER_IMAGE_TAG} docker-compose -f .circleci/docker-compose.ci.dusk.yml up -d
              LARAVEL_CONTAINER_ID=$(docker-compose -f .circleci/docker-compose.ci.dusk.yml ps -q laravel)
              AWS_TEMPLATE=$(cat .docker/localstack/init.d/app.yml)

              docker-compose -f .circleci/docker-compose.ci.dusk.yml exec awslocal awslocal cloudformation create-stack --stack-name "app" --template-body "${AWS_TEMPLATE}"

              set +e

              docker-compose -f .circleci/docker-compose.ci.yml run --name laravel_dusk_test --entrypoint bash -e APP_URL=http://webserver -e DUSK_DRIVER_URL=http://chrome:4444/wd/hub laravel_test -c "
                curl http://chrome:4444/wd/hub --http0.9 --retry-connrefused --retry 30 --output /dev/null --silent
                cp .env.example .env
                php artisan key:generate --force
                php artisan dusk:chrome-driver
                php artisan dusk
              "

              DUSK_EXIT_CODE=$(docker inspect laravel_dusk_test --format='{{.State.ExitCode}}')
              DUSK_CONTAINER_ID=$(docker inspect laravel_dusk_test --format='{{.Id}}')

              docker cp ${DUSK_CONTAINER_ID}:/var/www/tests/Browser/screenshots/. artifacts/screenshots
              docker cp ${LARAVEL_CONTAINER_ID}:/var/www/storage/logs/. artifacts/logs

              rm -f artifacts/screenshots/.gitignore
              rm -f artifacts/logs/.gitignore

              set -e

              test ${DUSK_EXIT_CODE} -eq 0
            else
              echo "Laravel Dusk is not installed"
            fi
      - store_artifacts:
          path: artifacts
workflows:
  version: 2
  test-workflow:
    jobs:
      - test
